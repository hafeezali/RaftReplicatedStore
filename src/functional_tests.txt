Normal get and put functionality : 
- Run performance tests to evaluate the results. The get and put should be successful and correct.
- Try performing get for a key that does not exist
- Command : Get 100 -> Result : Key 100 does not exist
- Command : Get 100 200 300 -> Result : Key 100 does not exist Key 200 does not exist Key 300 does not exist
- Command : Put 100 1 -> Result : Put of key 100 succeeded!
- Command : Get 100 -> Result : Get for key 100 succeeded, value 1


Leader Failure : (Checking correctness of logs, election module - safety {there is only one leader in the system}, durability)
- Execute Put 1 100, Put 2 200 in the normal execution environment
- Read the value of the leader from the logs
- Go to docker desktop and pause the server which is the leader
- Execute Get 1, Get 2 and verify the results
- Re election should be happening in the system
- Execute Put 3 300, Put 4 400 
- Go to docker desktop and unpause the leader server
- Execute Put 5 500 and verify that the previous leader doesn't become the leader when it comes back up
- Also, check the logs of the previous leader, it should get corrected by the current leader
- Execute Get 4, Get 5 and verify the results


Follower Failure : (Checking - State is getting persisted when the follower comes back up, correction of logs is happening properly and relection is taking place)
- Execute Put 1 100, Put 2 200 in the normal execution environment
- Read the value of the leader from the logs
- Go to docker desktop and pause the server which is the follower
- Execute Get 1, Get 2 and verify the results 
- Execute Put 3 300, Put 4 400 
- Go to docker desktop and unpause the follower server
- Execute Put 5 500
- A re election must happen in the system because follower came back up with increased term but should not become the leader
- Check the logs of the follower that you unpaused, it should get corrected by the current leader
- Execute Get 4, Get 5 and verify the results

